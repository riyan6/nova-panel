// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.0--rc2
// source: vps.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Host          *HostInfo              `protobuf:"bytes,2,opt,name=host,proto3" json:"host,omitempty"`
	State         *StateInfo             `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	LastActive    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_active,json=lastActive,proto3" json:"last_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_vps_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vps_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_vps_proto_rawDescGZIP(), []int{0}
}

func (x *StatusRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StatusRequest) GetHost() *HostInfo {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *StatusRequest) GetState() *StateInfo {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *StatusRequest) GetLastActive() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActive
	}
	return nil
}

type HostInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Platform      string                 `protobuf:"bytes,1,opt,name=platform,proto3" json:"platform,omitempty"`
	Cpu           []string               `protobuf:"bytes,2,rep,name=cpu,proto3" json:"cpu,omitempty"`
	MemTotal      uint64                 `protobuf:"varint,3,opt,name=mem_total,json=memTotal,proto3" json:"mem_total,omitempty"`
	DiskTotal     uint64                 `protobuf:"varint,4,opt,name=disk_total,json=diskTotal,proto3" json:"disk_total,omitempty"`
	Arch          string                 `protobuf:"bytes,5,opt,name=arch,proto3" json:"arch,omitempty"`
	BootTime      int64                  `protobuf:"varint,6,opt,name=boot_time,json=bootTime,proto3" json:"boot_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HostInfo) Reset() {
	*x = HostInfo{}
	mi := &file_vps_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostInfo) ProtoMessage() {}

func (x *HostInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vps_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostInfo.ProtoReflect.Descriptor instead.
func (*HostInfo) Descriptor() ([]byte, []int) {
	return file_vps_proto_rawDescGZIP(), []int{1}
}

func (x *HostInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *HostInfo) GetCpu() []string {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *HostInfo) GetMemTotal() uint64 {
	if x != nil {
		return x.MemTotal
	}
	return 0
}

func (x *HostInfo) GetDiskTotal() uint64 {
	if x != nil {
		return x.DiskTotal
	}
	return 0
}

func (x *HostInfo) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *HostInfo) GetBootTime() int64 {
	if x != nil {
		return x.BootTime
	}
	return 0
}

type StateInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Cpu            float64                `protobuf:"fixed64,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	MemUsed        uint64                 `protobuf:"varint,2,opt,name=mem_used,json=memUsed,proto3" json:"mem_used,omitempty"`
	DiskUsed       uint64                 `protobuf:"varint,3,opt,name=disk_used,json=diskUsed,proto3" json:"disk_used,omitempty"`
	NetInTransfer  uint64                 `protobuf:"varint,4,opt,name=net_in_transfer,json=netInTransfer,proto3" json:"net_in_transfer,omitempty"`
	NetOutTransfer uint64                 `protobuf:"varint,5,opt,name=net_out_transfer,json=netOutTransfer,proto3" json:"net_out_transfer,omitempty"`
	NetInSpeed     uint64                 `protobuf:"varint,6,opt,name=net_in_speed,json=netInSpeed,proto3" json:"net_in_speed,omitempty"`
	NetOutSpeed    uint64                 `protobuf:"varint,7,opt,name=net_out_speed,json=netOutSpeed,proto3" json:"net_out_speed,omitempty"`
	Uptime         uint64                 `protobuf:"varint,8,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Load_5         float64                `protobuf:"fixed64,9,opt,name=load_5,json=load5,proto3" json:"load_5,omitempty"`
	TcpConnCount   int32                  `protobuf:"varint,10,opt,name=tcp_conn_count,json=tcpConnCount,proto3" json:"tcp_conn_count,omitempty"`
	UdpConnCount   int32                  `protobuf:"varint,11,opt,name=udp_conn_count,json=udpConnCount,proto3" json:"udp_conn_count,omitempty"`
	ProcessCount   int32                  `protobuf:"varint,12,opt,name=process_count,json=processCount,proto3" json:"process_count,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StateInfo) Reset() {
	*x = StateInfo{}
	mi := &file_vps_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateInfo) ProtoMessage() {}

func (x *StateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vps_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateInfo.ProtoReflect.Descriptor instead.
func (*StateInfo) Descriptor() ([]byte, []int) {
	return file_vps_proto_rawDescGZIP(), []int{2}
}

func (x *StateInfo) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *StateInfo) GetMemUsed() uint64 {
	if x != nil {
		return x.MemUsed
	}
	return 0
}

func (x *StateInfo) GetDiskUsed() uint64 {
	if x != nil {
		return x.DiskUsed
	}
	return 0
}

func (x *StateInfo) GetNetInTransfer() uint64 {
	if x != nil {
		return x.NetInTransfer
	}
	return 0
}

func (x *StateInfo) GetNetOutTransfer() uint64 {
	if x != nil {
		return x.NetOutTransfer
	}
	return 0
}

func (x *StateInfo) GetNetInSpeed() uint64 {
	if x != nil {
		return x.NetInSpeed
	}
	return 0
}

func (x *StateInfo) GetNetOutSpeed() uint64 {
	if x != nil {
		return x.NetOutSpeed
	}
	return 0
}

func (x *StateInfo) GetUptime() uint64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *StateInfo) GetLoad_5() float64 {
	if x != nil {
		return x.Load_5
	}
	return 0
}

func (x *StateInfo) GetTcpConnCount() int32 {
	if x != nil {
		return x.TcpConnCount
	}
	return 0
}

func (x *StateInfo) GetUdpConnCount() int32 {
	if x != nil {
		return x.UdpConnCount
	}
	return 0
}

func (x *StateInfo) GetProcessCount() int32 {
	if x != nil {
		return x.ProcessCount
	}
	return 0
}

type StatusAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusAck) Reset() {
	*x = StatusAck{}
	mi := &file_vps_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusAck) ProtoMessage() {}

func (x *StatusAck) ProtoReflect() protoreflect.Message {
	mi := &file_vps_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusAck.ProtoReflect.Descriptor instead.
func (*StatusAck) Descriptor() ([]byte, []int) {
	return file_vps_proto_rawDescGZIP(), []int{3}
}

func (x *StatusAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CommandRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandRequest) Reset() {
	*x = CommandRequest{}
	mi := &file_vps_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandRequest) ProtoMessage() {}

func (x *CommandRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vps_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandRequest.ProtoReflect.Descriptor instead.
func (*CommandRequest) Descriptor() ([]byte, []int) {
	return file_vps_proto_rawDescGZIP(), []int{4}
}

func (x *CommandRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *CommandRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

type CommandResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandResponse) Reset() {
	*x = CommandResponse{}
	mi := &file_vps_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandResponse) ProtoMessage() {}

func (x *CommandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vps_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandResponse.ProtoReflect.Descriptor instead.
func (*CommandResponse) Descriptor() ([]byte, []int) {
	return file_vps_proto_rawDescGZIP(), []int{5}
}

func (x *CommandResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_vps_proto protoreflect.FileDescriptor

const file_vps_proto_rawDesc = "" +
	"\n" +
	"\tvps.proto\x12\x03vps\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa5\x01\n" +
	"\rStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12!\n" +
	"\x04host\x18\x02 \x01(\v2\r.vps.HostInfoR\x04host\x12$\n" +
	"\x05state\x18\x03 \x01(\v2\x0e.vps.StateInfoR\x05state\x12;\n" +
	"\vlast_active\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastActive\"\xa5\x01\n" +
	"\bHostInfo\x12\x1a\n" +
	"\bplatform\x18\x01 \x01(\tR\bplatform\x12\x10\n" +
	"\x03cpu\x18\x02 \x03(\tR\x03cpu\x12\x1b\n" +
	"\tmem_total\x18\x03 \x01(\x04R\bmemTotal\x12\x1d\n" +
	"\n" +
	"disk_total\x18\x04 \x01(\x04R\tdiskTotal\x12\x12\n" +
	"\x04arch\x18\x05 \x01(\tR\x04arch\x12\x1b\n" +
	"\tboot_time\x18\x06 \x01(\x03R\bbootTime\"\x8d\x03\n" +
	"\tStateInfo\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\x01R\x03cpu\x12\x19\n" +
	"\bmem_used\x18\x02 \x01(\x04R\amemUsed\x12\x1b\n" +
	"\tdisk_used\x18\x03 \x01(\x04R\bdiskUsed\x12&\n" +
	"\x0fnet_in_transfer\x18\x04 \x01(\x04R\rnetInTransfer\x12(\n" +
	"\x10net_out_transfer\x18\x05 \x01(\x04R\x0enetOutTransfer\x12 \n" +
	"\fnet_in_speed\x18\x06 \x01(\x04R\n" +
	"netInSpeed\x12\"\n" +
	"\rnet_out_speed\x18\a \x01(\x04R\vnetOutSpeed\x12\x16\n" +
	"\x06uptime\x18\b \x01(\x04R\x06uptime\x12\x15\n" +
	"\x06load_5\x18\t \x01(\x01R\x05load5\x12$\n" +
	"\x0etcp_conn_count\x18\n" +
	" \x01(\x05R\ftcpConnCount\x12$\n" +
	"\x0eudp_conn_count\x18\v \x01(\x05R\fudpConnCount\x12#\n" +
	"\rprocess_count\x18\f \x01(\x05R\fprocessCount\"%\n" +
	"\tStatusAck\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"E\n" +
	"\x0eCommandRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\")\n" +
	"\x0fCommandResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result2u\n" +
	"\x03Vps\x124\n" +
	"\fReportStatus\x12\x12.vps.StatusRequest\x1a\x0e.vps.StatusAck(\x01\x128\n" +
	"\vSendCommand\x12\x13.vps.CommandRequest\x1a\x14.vps.CommandResponseB\aZ\x05../pbb\x06proto3"

var (
	file_vps_proto_rawDescOnce sync.Once
	file_vps_proto_rawDescData []byte
)

func file_vps_proto_rawDescGZIP() []byte {
	file_vps_proto_rawDescOnce.Do(func() {
		file_vps_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vps_proto_rawDesc), len(file_vps_proto_rawDesc)))
	})
	return file_vps_proto_rawDescData
}

var file_vps_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_vps_proto_goTypes = []any{
	(*StatusRequest)(nil),         // 0: vps.StatusRequest
	(*HostInfo)(nil),              // 1: vps.HostInfo
	(*StateInfo)(nil),             // 2: vps.StateInfo
	(*StatusAck)(nil),             // 3: vps.StatusAck
	(*CommandRequest)(nil),        // 4: vps.CommandRequest
	(*CommandResponse)(nil),       // 5: vps.CommandResponse
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_vps_proto_depIdxs = []int32{
	1, // 0: vps.StatusRequest.host:type_name -> vps.HostInfo
	2, // 1: vps.StatusRequest.state:type_name -> vps.StateInfo
	6, // 2: vps.StatusRequest.last_active:type_name -> google.protobuf.Timestamp
	0, // 3: vps.Vps.ReportStatus:input_type -> vps.StatusRequest
	4, // 4: vps.Vps.SendCommand:input_type -> vps.CommandRequest
	3, // 5: vps.Vps.ReportStatus:output_type -> vps.StatusAck
	5, // 6: vps.Vps.SendCommand:output_type -> vps.CommandResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_vps_proto_init() }
func file_vps_proto_init() {
	if File_vps_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vps_proto_rawDesc), len(file_vps_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vps_proto_goTypes,
		DependencyIndexes: file_vps_proto_depIdxs,
		MessageInfos:      file_vps_proto_msgTypes,
	}.Build()
	File_vps_proto = out.File
	file_vps_proto_goTypes = nil
	file_vps_proto_depIdxs = nil
}
